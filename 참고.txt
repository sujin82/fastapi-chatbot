📋 방구석 힐링 챗봇 개발 WBS
🧩 1. 기획 단계
1.1 프로젝트 정의
주제 확정: "미래 시나리오를 함께 그려주는 힐링 챗봇"

대상 사용자 정의 (예: 사회초년생, 번아웃 직장인, 진로 고민 중인 대학생 등)

목표 설정: 정서적 위안, 상상력 자극, 긍정적 자기 이미지 제공

1.2 콘텐츠 기획
사용자 유형 분류 기준 설계:
나이, 성별, 직업, 감정 상태, 현재 고민

미래 시나리오 유형 정리:
직업적 성공 / 관계 회복 / 자아 실현 / 자유로운 삶 등

시나리오 톤 설정: 따뜻함, 공감, 가벼운 상상력

💬 2. 대화 설계 단계
2.1 사용자 입력 흐름 구성
기본 질문 예시 구성:
현재 상황, 감정 상태, 바라는 미래

선택형/자유형 입력 분리
응답 포맷 정리 (예: “상상해봐요”, “~하고 있는 당신의 모습이 보여요”)

2.2 시나리오 출력 로직 설계
유형별 템플릿 제작 (각 시나리오마다 감정 코드 설정)

예측된 정보로 감정적 서사 생성 (예: GPT 사용 기반)

랜덤 요소와 개인화 요소 균형 잡기

🛠️ 3. 개발 단계
3.1 프론트엔드
챗봇 인터페이스 디자인 (모바일 우선)

사용자의 현재 기분 선택 / 입력 인터랙션 설계

3.2 백엔드
사용자 입력 분석 (간단한 NLP 또는 규칙 기반)

시나리오 생성 모듈 연결 (예: GPT API 활용)

사용자 맞춤형 기록 저장 (선택사항)

🔍 4. 테스트 및 피드백
4.1 사용자 테스트
4가지 주요 사용자 유형별 피드백 수집

시나리오 공감도, 위로 효과 측정

4.2 개선 작업
감정 흐름 부자연스러운 부분 수정

다양성과 포괄성 강화 (성별 고정/직업 고정 등 피하기)

🚀 5. 배포 및 운영
5.1 초기 론칭
간단한 웹 챗봇 or 모바일 앱

소셜 홍보 (감성 시나리오 예시 공유)

5.2 향후 확장 아이디어
음성 출력 / 이미지 기반 시나리오

사용자 스스로 시나리오 저장/공유

“1년 후 다시 보기” 알림 기능

필요하다면, Notion, Excel, Trello 등으로 이 WBS를 직접 정리해드릴 수도 있어요.
다음으로는 어떤 부분을 먼저 작업해볼까요? 예를 들어 시나리오 템플릿 작성, 챗봇 질문 흐름, 또는 개발 도구 추천 같은 부분이요.



더 스마트한 응답, 파일 및 이미지 업




from pydantic import BaseModel
from typing import Optional, List

# ===== 사용자 관련 스키마 =====

class User(BaseModel):
    """사용자 기본 정보"""
    id: int
    username: str
    email: str
    
class UserCreate(BaseModel):
    """회원가입용 스키마"""
    username: str
    email: str
    password: str

class UserLogin(BaseModel):
    """로그인용 스키마"""
    email: str
    password: str

# ===== 챗봇 대화 관련 스키마 =====

class ChatMessage(BaseModel):
    """채팅 메시지"""
    user_name: str
    user_message: str
    bot_response: str
    timestamp: str

class ChatRequest(BaseModel):
    """채팅 요청"""
    user_name: str
    user_message: str

class ChatResponse(BaseModel):
    """채팅 응답"""
    bot_response: str
    conversation_id: int

# ===== 시나리오 관련 스키마 =====

class ScenarioRequest(BaseModel):
    """시나리오 생성 요청"""
    user_name: str
    current_situation: str
    dream: str
    timeframe: str  # "1년 후", "3년 후", "5년 후"

class Scenario(BaseModel):
    """생성된 시나리오"""
    id: int
    user_name: str
    current_situation: str
    dream: str
    timeframe: str
    scenario_text: str

# ===== 간단한 응답 스키마 =====

class SimpleResponse(BaseModel):
    """간단한 성공/실패 응답"""
    success: bool
    message: str
    data: Optional[dict] = None